Line numbers
============
1: Zero page assignments
5: include macros.asm
122: include todo.asm
214: include const.asm
483: include emu.asm
549: GLOBAL WORD dummy
551: GLOBAL WORD ret_val
555: GLOBAL WORD ret_address
559: GLOBAL WORD screen_ptr
563: GLOBAL WORD dict_ptr
565: GLOBAL WORD new_dict_ptr
568: GLOBAL WORD dict_save
570: GLOBAL WORD exec_ptr
573: GLOBAL WORD obj_address
577: GLOBAL WORD math_ptr1
579: GLOBAL WORD math_ptr2
607: include globals.asm
623: GLOBAL BYTE font_inverted
627: GLOBAL BYTE stack_count
629: GLOBAL BYTE mode
633: GLOBAL WORD test_count
653: GLOBAL BYTE stack_X
659: GLOBAL BYTE math_lo
661: GLOBAL BYTE math_hi
663: GLOBAL BYTE math_a
665: GLOBAL BYTE math_b
667: GLOBAL BYTE math_c
670: GLOBAL BYTE math_d
673: GLOBAL BYTE math_signs
675: GLOBAL BYTE math_sticky
677: GLOBAL BYTE math_max
680: GLOBAL BYTE math_fill
685: GLOBAL BYTE shift_counter
687: GLOBAL BYTE CORDIC_sign
689: GLOBAL BYTE CORDIC_halve
691: GLOBAL BYTE CORDIC_loop_inner
693: GLOBAL BYTE CORDIC_loop_outer
695: GLOBAL BYTE CORDIC_shift_count
697: GLOBAL BYTE CORDIC_sign_temp
699: GLOBAL BYTE CORDIC_end_sign
701: GLOBAL WORD CORDIC_comparator
711: GLOBAL BYTE aux_stack_ptr
713: GLOBAL BYTE aux_stack_count
715: GLOBAL BYTE aux_word_counter
732: include debug.asm
736: FUNC DebugText
       ARGS: STRING msg
       2 bytes used
750: FUNC halt_test
       ARGS: WORD test
       2 bytes used
766: FUNC halt_no_test
784: include tests.asm
794: FUNC InputTest
       ARGS: STRING input, STRING output, BYTE output_index, BYTE calculated_index, BYTE value
       7 bytes used
948: FUNC NewToR
       ARGS: WORD Rx
       2 bytes used
962: FUNC CopyNew
       ARGS: STRING num1
       2 bytes used
985: FUNC DebugRans
1020: FUNC DebugBuff
1057: FUNC RansToBuff
1069: FUNC CompareRans
1087: FUNC TestFail
       ARGS: STRING ans
       2 bytes used
1148: FUNC TestsPassed
1183: FUNC AddTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1249: FUNC MultTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1315: FUNC DivTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1382: FUNC tests
1446: include file_tests.asm
1452: GLOBAL WORD counter1
1453: GLOBAL WORD counter2
1455: GLOBAL WORD failed1
1456: GLOBAL WORD failed2
1458: FUNC line_num
1480: FUNC inc_line
1498: FUNC read_file_line
1523: FUNC FileInputTest
       VARS: BYTE value
       1 byte used
1633: FUNC read2
1659: FUNC file_tests
1947: include stats.asm
1951: FUNC stats
1990: include font_5x8.asm
2189: include font_custom.asm
2222: include emu6507.asm
2234: FUNC setup
2299: FUNC GfxSetup
2308: FUNC ReadKey
2314: FUNC LCD_clrscr
       VARS: BYTE counter
       1 byte used
2336: FUNC LCD_char
       ARGS: BYTE c_out, WORD pixel_ptr, BYTE pixel_index, BYTE pixel, BYTE lc1, BYTE lc2
       7 bytes used
2455: FUNC LCD_print
       ARGS: STRING source, BYTE index, BYTE arg
       4 bytes used
2483: include system.asm
2486: FUNC MemCopy
       ARGS: WORD source, WORD dest, BYTE count
       5 bytes used
2505: include math.asm
2522: FUNC BCD_Reverse
       ARGS: WORD source, BYTE count
       3 bytes used
2543: FUNC BCD_RevExp
2556: FUNC BCD_RevSig
2579: FUNC ZeroReg
2592: FUNC MaxReg
2619: FUNC IncRansExp
2632: FUNC SwapR0R1
2652: FUNC CopyRegs
2670: FUNC TosR0R1
2696: FUNC RansTos
2719: FUNC HalfShift
2740: FUNC HalfShiftForward
2759: FUNC HalfShiftBackward
2778: FUNC HalfShiftWide
2803: FUNC HalfShiftWideForward
2827: FUNC ShiftR0
2913: FUNC NormRans
3003: FUNC BCD_Round
3041: FUNC BCD_Unpack
3062: FUNC BCD_Pack
3104: FUNC BCD_Exp_diff
3116: FUNC BCD_StickyRound
3161: FUNC BCD_Add
3339: FUNC BCD_Mult
3480: FUNC BCD_Div
3620: include cordic.asm
3741: FUNC BCD_CORDIC
4008: FUNC CORDIC_ShiftR0
4017: FUNC CORDIC_MarkSign
4034: FUNC CORDIC_Trig
4192: FUNC CORDIC_Atrig1
4204: FUNC CORDIC_Atan
4365: FUNC CORDIC_AsinAcos
4521: FUNC CORDIC_Pack
4573: FUNC CORDIC_Push
4691: include output.asm
4695: FUNC DigitHigh
       ARGS: BYTE digit
       1 byte used
4715: FUNC DigitLow
       ARGS: BYTE digit
       1 byte used
4732: FUNC DrawFloat
       ARGS: WORD source, BYTE index, BYTE arg, BYTE sign, WORD buff
       7 bytes used
4854: FUNC HexHigh
       ARGS: BYTE digit, BYTE arg
       2 bytes used
4883: FUNC HexLow
       ARGS: BYTE digit, BYTE arg
       2 bytes used
4909: FUNC DrawHex
       ARGS: WORD source, BYTE arg
       3 bytes used
4949: FUNC DrawString
       ARGS: WORD source, BYTE arg, BYTE index
       4 bytes used
4986: FUNC DrawStack
       VARS: BYTE character, BYTE counter, WORD address
       4 bytes used
5147: include error.asm
5195: FUNC ErrorMsg
       VARS: WORD msg
       2 bytes used
5262: include aux_stack.asm
5267: FUNC AuxPushShort
5291: FUNC AuxPopShort
5314: include forth.asm
5317: FUNC InitForth
5343: FUNC ReadLine
       VARS: BYTE cursor, BYTE cursor_timer, BYTE arg, BYTE index, BYTE str_index
       5 bytes used
5593: FUNC LineWord
5649: FUNC FindWord
5716: FUNC CheckData
       VARS: BYTE input_mode, BYTE y_buff, BYTE index, BYTE which_digit, BYTE negative, BYTE exp_negative, BYTE exp_count, BYTE exp_found, BYTE dec_found, BYTE nonzero_found, BYTE digit_count, BYTE exp_digit_count, BYTE digit_found
       13 bytes used
6240: FUNC ExecToken
6377: FUNC ExecThread
6406: FUNC StackAddItem
6417: FUNC DictEnd
6466: FUNC IncDictPtr
6478: FUNC IncExecPtr
6491: FUNC AllocMem
6520: FUNC WriteToken
       VARS: BYTE token, BYTE user_defined
       2 bytes used
6580: FUNC WriteHeader
6654: FUNC TokenArgThread
6692: FUNC HexFalse
6699: FUNC HexTrue
6718: include words.asm
9904: include word_stubs.asm
10171: FUNC main BEGIN
       VARS: WORD dest, BYTE arg, BYTE type
       4 bytes used

Call graph
==========
main(4) > setup(0) - (4 bytes)
main(4) > tests(0) - (4 bytes)
main(4) > tests(0) > DebugText(2) - (6 bytes)
main(4) > stats(0) - (4 bytes)
main(4) > stats(0) > DebugText(2) - (6 bytes)
main(4) > GfxSetup(0) - (4 bytes)
main(4) > InitForth(0) - (4 bytes)
main(4) > DrawStack(4) - (8 bytes)
main(4) > DrawStack(4) > LCD_clrscr(1) - (9 bytes)
main(4) > DrawStack(4) > LCD_char(7) - (15 bytes)
main(4) > DrawStack(4) > DrawHex(3) - (11 bytes)
main(4) > DrawStack(4) > DrawHex(3) > LCD_char(7) - (18 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) - (13 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) > LCD_char(7) - (20 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexLow(2) - (13 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexLow(2) > LCD_char(7) - (20 bytes)
main(4) > DrawStack(4) > LCD_print(4) - (12 bytes)
main(4) > DrawStack(4) > LCD_print(4) > LCD_char(7) - (19 bytes)
main(4) > DrawStack(4) > DrawFloat(7) - (15 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > MemCopy(5) - (20 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > LCD_char(7) - (22 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) - (16 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) > LCD_char(7) - (23 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) - (16 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) > LCD_char(7) - (23 bytes)
main(4) > DrawStack(4) > DrawString(4) - (12 bytes)
main(4) > DrawStack(4) > DrawString(4) > LCD_char(7) - (19 bytes)
main(4) > ReadLine(5) - (9 bytes)
main(4) > ReadLine(5) > LCD_print(4) - (13 bytes)
main(4) > ReadLine(5) > LCD_print(4) > LCD_char(7) - (20 bytes)
main(4) > ReadLine(5) > ReadKey(0) - (9 bytes)
main(4) > ReadLine(5) > LCD_char(7) - (16 bytes)
main(4) > LineWord(0) - (4 bytes)
main(4) > FindWord(0) - (4 bytes)
main(4) > WriteToken(2) - (6 bytes)
main(4) > WriteToken(2) > AllocMem(0) - (6 bytes)
main(4) > CheckData(13) - (17 bytes)
main(4) > CheckData(13) > BCD_Reverse(3) - (20 bytes)
main(4) > MemCopy(5) - (9 bytes)
main(4) > ErrorMsg(2) - (6 bytes)
main(4) > ErrorMsg(2) > LCD_print(4) - (10 bytes)
main(4) > ErrorMsg(2) > LCD_print(4) > LCD_char(7) - (17 bytes)
main(4) > ErrorMsg(2) > LCD_char(7) - (13 bytes)
main(4) > ErrorMsg(2) > ReadKey(0) - (6 bytes)

Functions outside of call graph
===============================
AddTest(6 bytes)
AuxPopShort(0 bytes)
AuxPushShort(0 bytes)
BCD_Add(0 bytes)
BCD_CORDIC(0 bytes)
BCD_Div(0 bytes)
BCD_Exp_diff(0 bytes)
BCD_Mult(0 bytes)
BCD_Pack(0 bytes)
BCD_RevExp(0 bytes)
BCD_RevSig(0 bytes)
BCD_Round(0 bytes)
BCD_StickyRound(0 bytes)
BCD_Unpack(0 bytes)
CORDIC_AsinAcos(0 bytes)
CORDIC_Atan(0 bytes)
CORDIC_Atrig1(0 bytes)
CORDIC_MarkSign(0 bytes)
CORDIC_Pack(0 bytes)
CORDIC_Push(0 bytes)
CORDIC_ShiftR0(0 bytes)
CORDIC_Trig(0 bytes)
CompareRans(0 bytes)
CopyNew(2 bytes)
CopyRegs(0 bytes)
DebugBuff(0 bytes)
DebugRans(0 bytes)
DictEnd(0 bytes)
DivTest(6 bytes)
ExecThread(0 bytes)
ExecToken(0 bytes)
FileInputTest(1 bytes)
HalfShift(0 bytes)
HalfShiftBackward(0 bytes)
HalfShiftForward(0 bytes)
HalfShiftWide(0 bytes)
HalfShiftWideForward(0 bytes)
HexFalse(0 bytes)
HexTrue(0 bytes)
IncDictPtr(0 bytes)
IncExecPtr(0 bytes)
IncRansExp(0 bytes)
InputTest(7 bytes)
MaxReg(0 bytes)
MultTest(6 bytes)
NewToR(2 bytes)
NormRans(0 bytes)
RansToBuff(0 bytes)
RansTos(0 bytes)
ShiftR0(0 bytes)
StackAddItem(0 bytes)
SwapR0R1(0 bytes)
TestFail(2 bytes)
TestsPassed(0 bytes)
TokenArgThread(0 bytes)
TosR0R1(0 bytes)
WriteHeader(0 bytes)
ZeroReg(0 bytes)
file_tests(0 bytes)
halt_no_test(0 bytes)
halt_test(2 bytes)
inc_line(0 bytes)
line_num(0 bytes)
read2(0 bytes)
read_file_line(0 bytes)

String literals from CALL
=========================
_string_literal00001: FCB "\\rTest ",0
_string_literal00002: FCB ": FAILED!\\n",0
_string_literal00003: FCB "   Expected: ",0
_string_literal00004: FCB "\\n   Found:    ",0
_string_literal00005: FCB "\\gTest ",0
_string_literal00006: FCB ": passed\\n",0
_string_literal00007: FCB "E",0
_string_literal00008: FCB "E",0
_string_literal00009: FCB "\\rTest ",0
_string_literal00010: FCB ": FAILED!\\n",0
_string_literal00011: FCB "   Expected: ",0
_string_literal00012: FCB "\\n   Found:    ",0
_string_literal00013: FCB "\\n\\n",0
_string_literal00014: FCB "\\gTest ",0
_string_literal00015: FCB ": passed - ",0
_string_literal00016: FCB "\\n",0
_string_literal00017: FCB "\\n\\gAll specific tests passed",0
_string_literal00018: FCB "\\l",0
_string_literal00019: FCB "\\n\\n\\rLine ",0
_string_literal00020: FCB ": FAILED!\\n",0
_string_literal00021: FCB "   Found:    ",0
_string_literal00022: FCB "\\n\\n\\lBeginning file-based tests\\n",0
_string_literal00023: FCB "\\n\\rUnrecognized input code: $",0
_string_literal00024: FCB "\\n\\l",0
_string_literal00025: FCB "\\n\\n\\gAll filed-based tests passed",0
_string_literal00026: FCB "\\n\\n\\rFile-based tests failed: ",0
_string_literal00027: FCB "\\n\\lTotal lines: ",0
_string_literal00028: FCB "\\n\\n\\rLine ",0
_string_literal00029: FCB ": FAILED!\\n",0
_string_literal00030: FCB "   Expected: ",0
_string_literal00031: FCB "\\n   Found:    ",0
_string_literal00032: FCB "E",0
_string_literal00033: FCB "\\n\\n\\lFree zp bytes: ",0
_string_literal00034: FCB "\\n\\lFree RIOT bytes: ",0
_string_literal00035: FCB "\\n",0
_string_literal00036: FCB " FREE]",0
_string_literal00037: FCB "               ",0
_string_literal00038: FCB "           [OK]",0
_string_literal00039: FCB "a                     ",0
_string_literal00040: FCB "                ",0


