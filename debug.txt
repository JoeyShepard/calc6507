Line numbers
============
1: Zero page assignments
5: include macros.asm
122: include todo.asm
214: include const.asm
487: include emu.asm
548: GLOBAL BYTE null
556: GLOBAL WORD dummy
558: GLOBAL WORD ret_val
562: GLOBAL WORD ret_address
566: GLOBAL WORD screen_ptr
570: GLOBAL WORD dict_ptr
572: GLOBAL WORD new_dict_ptr
575: GLOBAL WORD dict_save
577: GLOBAL WORD exec_ptr
580: GLOBAL WORD obj_address
584: GLOBAL WORD math_ptr1
586: GLOBAL WORD math_ptr2
614: include globals.asm
630: GLOBAL BYTE font_inverted
634: GLOBAL BYTE stack_count
636: GLOBAL BYTE mode
640: GLOBAL WORD test_count
660: GLOBAL BYTE stack_X
666: GLOBAL BYTE math_lo
668: GLOBAL BYTE math_hi
670: GLOBAL BYTE math_a
672: GLOBAL BYTE math_b
674: GLOBAL BYTE math_c
677: GLOBAL BYTE math_d
680: GLOBAL BYTE math_signs
682: GLOBAL BYTE math_sticky
684: GLOBAL BYTE math_max
687: GLOBAL BYTE math_fill
692: GLOBAL BYTE shift_counter
694: GLOBAL BYTE CORDIC_sign
696: GLOBAL BYTE CORDIC_halve
698: GLOBAL BYTE CORDIC_loop_inner
700: GLOBAL BYTE CORDIC_loop_outer
702: GLOBAL BYTE CORDIC_shift_count
704: GLOBAL BYTE CORDIC_sign_temp
706: GLOBAL BYTE CORDIC_end_sign
708: GLOBAL WORD CORDIC_comparator
718: GLOBAL BYTE aux_stack_ptr
720: GLOBAL BYTE aux_stack_count
722: GLOBAL BYTE aux_word_counter
739: include debug.asm
743: FUNC DebugText
       ARGS: STRING msg
       2 bytes used
757: FUNC halt_test
       ARGS: WORD test
       2 bytes used
773: FUNC halt_no_test
791: include tests.asm
801: FUNC InputTest
       ARGS: STRING input, STRING output, BYTE output_index, BYTE calculated_index, BYTE value
       7 bytes used
955: FUNC NewToR
       ARGS: WORD Rx
       2 bytes used
969: FUNC CopyNew
       ARGS: STRING num1
       2 bytes used
992: FUNC DebugRans
1027: FUNC DebugBuff
1064: FUNC RansToBuff
1076: FUNC CompareRans
1094: FUNC TestFail
       ARGS: STRING ans
       2 bytes used
1155: FUNC TestsPassed
1190: FUNC AddTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1256: FUNC MultTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1322: FUNC DivTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1389: FUNC tests
1453: include file_tests.asm
1459: GLOBAL WORD counter1
1460: GLOBAL WORD counter2
1462: GLOBAL WORD failed1
1463: GLOBAL WORD failed2
1465: FUNC line_num
1487: FUNC inc_line
1505: FUNC read_file_line
1530: FUNC FileInputTest
       VARS: BYTE value
       1 byte used
1640: FUNC read2
1666: FUNC file_tests
1954: include stats.asm
1958: FUNC stats
1997: include font_5x8.asm
2196: include font_custom.asm
2229: include emu6507.asm
2241: FUNC setup
2309: FUNC GfxSetup
2318: FUNC ReadKey
2324: FUNC LCD_clrscr
       VARS: BYTE counter
       1 byte used
2346: FUNC LCD_char
       ARGS: BYTE c_out, WORD pixel_ptr, BYTE pixel_index, BYTE pixel, BYTE lc1, BYTE lc2
       7 bytes used
2465: FUNC LCD_print
       ARGS: STRING source, BYTE index, BYTE arg
       4 bytes used
2493: include system.asm
2496: FUNC MemCopy
       ARGS: WORD source, WORD dest, BYTE count
       5 bytes used
2515: include math.asm
2532: FUNC BCD_Reverse
       ARGS: WORD source, BYTE count
       3 bytes used
2553: FUNC BCD_RevExp
2566: FUNC BCD_RevSig
2589: FUNC ZeroReg
2602: FUNC MaxReg
2629: FUNC IncRansExp
2642: FUNC SwapR0R1
2662: FUNC CopyRegs
2680: FUNC TosR0R1
2706: FUNC RansTos
2729: FUNC HalfShift
2750: FUNC HalfShiftForward
2769: FUNC HalfShiftBackward
2788: FUNC HalfShiftWide
2813: FUNC HalfShiftWideForward
2837: FUNC ShiftR0
2923: FUNC NormRans
3013: FUNC BCD_Round
3051: FUNC BCD_Unpack
3072: FUNC BCD_Pack
3114: FUNC BCD_Exp_diff
3126: FUNC BCD_StickyRound
3171: FUNC BCD_Add
3349: FUNC BCD_Mult
3490: FUNC BCD_Div
3630: include cordic.asm
3751: FUNC BCD_CORDIC
4018: FUNC CORDIC_ShiftR0
4027: FUNC CORDIC_MarkSign
4044: FUNC CORDIC_Trig
4202: FUNC CORDIC_Atrig1
4214: FUNC CORDIC_Atan
4375: FUNC CORDIC_AsinAcos
4531: FUNC CORDIC_Pack
4583: FUNC CORDIC_Push
4701: include output.asm
4705: FUNC DigitHigh
       ARGS: BYTE digit
       1 byte used
4725: FUNC DigitLow
       ARGS: BYTE digit
       1 byte used
4742: FUNC DrawFloat
       ARGS: WORD source, BYTE index, BYTE arg, BYTE sign, WORD buff
       7 bytes used
4864: FUNC HexHigh
       ARGS: BYTE digit, BYTE arg
       2 bytes used
4893: FUNC HexLow
       ARGS: BYTE digit, BYTE arg
       2 bytes used
4919: FUNC DrawHex
       ARGS: WORD source, BYTE arg
       3 bytes used
4959: FUNC DrawString
       ARGS: WORD source, BYTE arg, BYTE index
       4 bytes used
4996: FUNC DrawStack
       VARS: BYTE character, BYTE counter, WORD address
       4 bytes used
5157: include error.asm
5208: FUNC ErrorMsg
       VARS: WORD msg
       2 bytes used
5275: include aux_stack.asm
5280: FUNC AuxPushShort
5304: FUNC AuxPopShort
5327: include forth.asm
5330: FUNC InitForth
5356: FUNC ReadLine
       VARS: BYTE cursor, BYTE cursor_timer, BYTE arg, BYTE index, BYTE str_index
       5 bytes used
5606: FUNC LineWord
5662: FUNC FindWord
5729: FUNC CheckData
       VARS: BYTE input_mode, BYTE y_buff, BYTE index, BYTE which_digit, BYTE negative, BYTE exp_negative, BYTE exp_count, BYTE exp_found, BYTE dec_found, BYTE nonzero_found, BYTE digit_count, BYTE exp_digit_count, BYTE digit_found
       13 bytes used
6253: FUNC ExecToken
6390: FUNC ExecThread
6419: FUNC StackAddItem
6430: FUNC DictEnd
6479: FUNC IncDictPtr
6491: FUNC IncExecPtr
6504: FUNC AllocMem
6533: FUNC WriteToken
       VARS: BYTE token, BYTE user_defined
       2 bytes used
6593: FUNC WriteHeader
6667: FUNC TokenArgThread
6705: FUNC HexFalse
6712: FUNC HexTrue
6731: include words.asm
10112: include word_stubs.asm
10389: FUNC main BEGIN
       VARS: WORD dest, BYTE arg, BYTE type
       4 bytes used

Call graph
==========
main(4) > setup(0) - (4 bytes)
main(4) > tests(0) - (4 bytes)
main(4) > tests(0) > DebugText(2) - (6 bytes)
main(4) > stats(0) - (4 bytes)
main(4) > stats(0) > DebugText(2) - (6 bytes)
main(4) > GfxSetup(0) - (4 bytes)
main(4) > InitForth(0) - (4 bytes)
main(4) > DrawStack(4) - (8 bytes)
main(4) > DrawStack(4) > LCD_clrscr(1) - (9 bytes)
main(4) > DrawStack(4) > LCD_char(7) - (15 bytes)
main(4) > DrawStack(4) > DrawHex(3) - (11 bytes)
main(4) > DrawStack(4) > DrawHex(3) > LCD_char(7) - (18 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) - (13 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) > LCD_char(7) - (20 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexLow(2) - (13 bytes)
main(4) > DrawStack(4) > DrawHex(3) > HexLow(2) > LCD_char(7) - (20 bytes)
main(4) > DrawStack(4) > LCD_print(4) - (12 bytes)
main(4) > DrawStack(4) > LCD_print(4) > LCD_char(7) - (19 bytes)
main(4) > DrawStack(4) > DrawFloat(7) - (15 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > MemCopy(5) - (20 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > LCD_char(7) - (22 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) - (16 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) > LCD_char(7) - (23 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) - (16 bytes)
main(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) > LCD_char(7) - (23 bytes)
main(4) > DrawStack(4) > DrawString(4) - (12 bytes)
main(4) > DrawStack(4) > DrawString(4) > LCD_char(7) - (19 bytes)
main(4) > ReadLine(5) - (9 bytes)
main(4) > ReadLine(5) > LCD_print(4) - (13 bytes)
main(4) > ReadLine(5) > LCD_print(4) > LCD_char(7) - (20 bytes)
main(4) > ReadLine(5) > ReadKey(0) - (9 bytes)
main(4) > ReadLine(5) > LCD_char(7) - (16 bytes)
main(4) > LineWord(0) - (4 bytes)
main(4) > FindWord(0) - (4 bytes)
main(4) > WriteToken(2) - (6 bytes)
main(4) > WriteToken(2) > AllocMem(0) - (6 bytes)
main(4) > CheckData(13) - (17 bytes)
main(4) > CheckData(13) > BCD_Reverse(3) - (20 bytes)
main(4) > MemCopy(5) - (9 bytes)
main(4) > ErrorMsg(2) - (6 bytes)
main(4) > ErrorMsg(2) > LCD_print(4) - (10 bytes)
main(4) > ErrorMsg(2) > LCD_print(4) > LCD_char(7) - (17 bytes)
main(4) > ErrorMsg(2) > LCD_char(7) - (13 bytes)
main(4) > ErrorMsg(2) > ReadKey(0) - (6 bytes)

Functions outside of call graph
===============================
AddTest(6 bytes)
AuxPopShort(0 bytes)
AuxPushShort(0 bytes)
BCD_Add(0 bytes)
BCD_CORDIC(0 bytes)
BCD_Div(0 bytes)
BCD_Exp_diff(0 bytes)
BCD_Mult(0 bytes)
BCD_Pack(0 bytes)
BCD_RevExp(0 bytes)
BCD_RevSig(0 bytes)
BCD_Round(0 bytes)
BCD_StickyRound(0 bytes)
BCD_Unpack(0 bytes)
CORDIC_AsinAcos(0 bytes)
CORDIC_Atan(0 bytes)
CORDIC_Atrig1(0 bytes)
CORDIC_MarkSign(0 bytes)
CORDIC_Pack(0 bytes)
CORDIC_Push(0 bytes)
CORDIC_ShiftR0(0 bytes)
CORDIC_Trig(0 bytes)
CompareRans(0 bytes)
CopyNew(2 bytes)
CopyRegs(0 bytes)
DebugBuff(0 bytes)
DebugRans(0 bytes)
DictEnd(0 bytes)
DivTest(6 bytes)
ExecThread(0 bytes)
ExecToken(0 bytes)
FileInputTest(1 bytes)
HalfShift(0 bytes)
HalfShiftBackward(0 bytes)
HalfShiftForward(0 bytes)
HalfShiftWide(0 bytes)
HalfShiftWideForward(0 bytes)
HexFalse(0 bytes)
HexTrue(0 bytes)
IncDictPtr(0 bytes)
IncExecPtr(0 bytes)
IncRansExp(0 bytes)
InputTest(7 bytes)
MaxReg(0 bytes)
MultTest(6 bytes)
NewToR(2 bytes)
NormRans(0 bytes)
RansToBuff(0 bytes)
RansTos(0 bytes)
ShiftR0(0 bytes)
StackAddItem(0 bytes)
SwapR0R1(0 bytes)
TestFail(2 bytes)
TestsPassed(0 bytes)
TokenArgThread(0 bytes)
TosR0R1(0 bytes)
WriteHeader(0 bytes)
ZeroReg(0 bytes)
file_tests(0 bytes)
halt_no_test(0 bytes)
halt_test(2 bytes)
inc_line(0 bytes)
line_num(0 bytes)
read2(0 bytes)
read_file_line(0 bytes)

String literals from CALL
=========================
_string_literal00001: FCB "\\rTest ",0
_string_literal00002: FCB ": FAILED!\\n",0
_string_literal00003: FCB "   Expected: ",0
_string_literal00004: FCB "\\n   Found:    ",0
_string_literal00005: FCB "\\gTest ",0
_string_literal00006: FCB ": passed\\n",0
_string_literal00007: FCB "E",0
_string_literal00008: FCB "E",0
_string_literal00009: FCB "\\rTest ",0
_string_literal00010: FCB ": FAILED!\\n",0
_string_literal00011: FCB "   Expected: ",0
_string_literal00012: FCB "\\n   Found:    ",0
_string_literal00013: FCB "\\n\\n",0
_string_literal00014: FCB "\\gTest ",0
_string_literal00015: FCB ": passed - ",0
_string_literal00016: FCB "\\n",0
_string_literal00017: FCB "\\n\\gAll specific tests passed",0
_string_literal00018: FCB "\\l",0
_string_literal00019: FCB "\\n\\n\\rLine ",0
_string_literal00020: FCB ": FAILED!\\n",0
_string_literal00021: FCB "   Found:    ",0
_string_literal00022: FCB "\\n\\n\\lBeginning file-based tests\\n",0
_string_literal00023: FCB "\\n\\rUnrecognized input code: $",0
_string_literal00024: FCB "\\n\\l",0
_string_literal00025: FCB "\\n\\n\\gAll filed-based tests passed",0
_string_literal00026: FCB "\\n\\n\\rFile-based tests failed: ",0
_string_literal00027: FCB "\\n\\lTotal lines: ",0
_string_literal00028: FCB "\\n\\n\\rLine ",0
_string_literal00029: FCB ": FAILED!\\n",0
_string_literal00030: FCB "   Expected: ",0
_string_literal00031: FCB "\\n   Found:    ",0
_string_literal00032: FCB "E",0
_string_literal00033: FCB "\\n\\n\\lFree zp bytes: ",0
_string_literal00034: FCB "\\n\\lFree RIOT bytes: ",0
_string_literal00035: FCB "\\n",0
_string_literal00036: FCB " FREE]",0
_string_literal00037: FCB "               ",0
_string_literal00038: FCB "           [OK]",0
_string_literal00039: FCB "a                     ",0
_string_literal00040: FCB "                ",0


