Line numbers
============
1: Zero page assignments
12: include macros.asm
88: include todo.asm
168: include const.asm
445: include emu.asm
503: include zp.asm
511: GLOBAL BYTE null
519: GLOBAL WORD dummy
521: GLOBAL WORD ret_val
525: GLOBAL BYTE keys_alpha
527: GLOBAL BYTE sys_bank
529: GLOBAL BYTE bank_temp_A
531: GLOBAL BYTE bank_temp_Y
535: GLOBAL WORD ret_address
539: GLOBAL WORD screen_ptr
543: GLOBAL WORD dict_ptr
545: GLOBAL WORD new_dict_ptr
548: GLOBAL WORD dict_save
550: GLOBAL WORD exec_ptr
553: GLOBAL WORD obj_address
557: GLOBAL WORD math_ptr1
559: GLOBAL WORD math_ptr2
585: include globals.asm
601: GLOBAL BYTE font_inverted
605: GLOBAL BYTE stack_count
607: GLOBAL BYTE mode
611: GLOBAL WORD test_count
631: GLOBAL BYTE stack_X
637: GLOBAL BYTE math_lo
639: GLOBAL BYTE math_hi
641: GLOBAL BYTE math_a
643: GLOBAL BYTE math_b
645: GLOBAL BYTE math_c
648: GLOBAL BYTE math_d
651: GLOBAL BYTE math_signs
653: GLOBAL BYTE math_sticky
655: GLOBAL BYTE math_max
658: GLOBAL BYTE math_fill
663: GLOBAL BYTE shift_counter
665: GLOBAL BYTE CORDIC_sign
667: GLOBAL BYTE CORDIC_halve
669: GLOBAL BYTE CORDIC_loop_inner
671: GLOBAL BYTE CORDIC_loop_outer
673: GLOBAL BYTE CORDIC_shift_count
675: GLOBAL BYTE CORDIC_sign_temp
677: GLOBAL BYTE CORDIC_end_sign
679: GLOBAL WORD CORDIC_comparator
689: GLOBAL BYTE aux_stack_ptr
691: GLOBAL BYTE aux_stack_count
693: GLOBAL BYTE aux_word_counter
708: include debug.asm
712: FUNC DebugText
       ARGS: STRING msg
       2 bytes used
727: FUNC halt_test
       ARGS: WORD test
       2 bytes used
744: FUNC halt_no_test
763: include tests.asm
773: FUNC InputTest
       ARGS: STRING input, STRING output, BYTE output_index, BYTE calculated_index, BYTE value
       7 bytes used
928: FUNC NewToR
       ARGS: WORD Rx
       2 bytes used
943: FUNC CopyNew
       ARGS: STRING num1
       2 bytes used
967: FUNC DebugRans
1003: FUNC DebugBuff
1041: FUNC RansToBuff
1054: FUNC CompareRans
1073: FUNC TestFail
       ARGS: STRING ans
       2 bytes used
1135: FUNC TestsPassed
1171: FUNC AddTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1238: FUNC MultTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1305: FUNC DivTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1373: FUNC tests
1438: include file_tests.asm
1444: GLOBAL WORD counter1
1445: GLOBAL WORD counter2
1447: GLOBAL WORD failed1
1448: GLOBAL WORD failed2
1450: FUNC line_num
1473: FUNC inc_line
1492: FUNC read_file_line
1518: FUNC FileInputTest
       VARS: BYTE value
       1 byte used
1629: FUNC read2
1656: FUNC file_tests
1945: include stats.asm
1949: FUNC stats
1989: include font_5x8.asm
2188: include font_custom.asm
2221: include emu6507.asm
2246: FUNC setup
2319: FUNC GfxSetup
2329: FUNC ReadKey
2443: FUNC LCD_clrscr
       VARS: BYTE counter
       1 byte used
2466: FUNC LCD_char
       ARGS: BYTE c_out, WORD pixel_ptr, BYTE pixel_index, BYTE pixel, BYTE lc1, BYTE lc2
       7 bytes used
2586: FUNC LCD_print
       ARGS: STRING source, BYTE index, BYTE arg
       4 bytes used
2612: FUNC LCD_Col
2620: FUNC LCD_Row
2634: FUNC LCD_Byte
       ARGS: BYTE data, BYTE counter
       2 bytes used
2667: FUNC GetTimer
2678: include system.asm
2681: FUNC MemCopy
       ARGS: WORD source, WORD dest, BYTE count
       5 bytes used
2701: include math.asm
2720: FUNC BCD_Reverse
       ARGS: WORD source, BYTE count
       3 bytes used
2742: FUNC BCD_RevExp
2756: FUNC BCD_RevSig
2780: FUNC ZeroReg
2794: FUNC MaxReg
2822: FUNC IncRansExp
2838: FUNC SwapR0R1
2859: FUNC CopyRegs
2878: FUNC TosR0R1
2905: FUNC RansTos
2929: FUNC HalfShift
2951: FUNC HalfShiftForward
2971: FUNC HalfShiftBackward
2991: FUNC HalfShiftWide
3017: FUNC HalfShiftWideForward
3042: FUNC ShiftR0
3132: FUNC ShiftRx
3220: FUNC NormRans
3311: FUNC BCD_Round
3350: FUNC BCD_Unpack
3372: FUNC BCD_Pack
3415: FUNC BCD_Exp_diff
3428: FUNC BCD_StickyRound
3474: FUNC BCD_Add
3653: FUNC BCD_Mult
3795: FUNC BCD_Div
3936: include cordic.asm
4056: FUNC BCD_CORDIC
4343: FUNC CORDIC_ShiftR0
4353: FUNC CORDIC_MarkSign
4371: FUNC CORDIC_Trig
4530: FUNC CORDIC_Atrig1
4543: FUNC CORDIC_Atan
4705: FUNC CORDIC_AsinAcos
4862: FUNC CORDIC_Pack
4915: FUNC CORDIC_Push
5035: include output.asm
5041: FUNC DigitHigh
       ARGS: BYTE digit
       1 byte used
5062: FUNC DigitLow
       ARGS: BYTE digit
       1 byte used
5080: FUNC DrawFloat
       ARGS: WORD source, BYTE index, BYTE arg, BYTE sign, WORD buff
       7 bytes used
5203: FUNC HexHigh
       ARGS: BYTE digit, BYTE arg
       2 bytes used
5233: FUNC HexLow
       ARGS: BYTE digit, BYTE arg
       2 bytes used
5260: FUNC DrawHex
       ARGS: WORD source, BYTE arg
       3 bytes used
5301: FUNC DrawString
       ARGS: WORD source, BYTE arg, BYTE index
       4 bytes used
5339: FUNC DrawAlpha
5379: FUNC DrawStack
       VARS: BYTE character, BYTE counter, WORD address
       4 bytes used
5535: include error.asm
5589: FUNC ErrorMsg
       VARS: WORD msg
       2 bytes used
5670: include aux_stack.asm
5677: FUNC AuxPushShort
5702: FUNC AuxPopShort
5729: include forth.asm
5735: FUNC InitForth
5755: FUNC ReadLine
       VARS: BYTE cursor, BYTE cursor_timer, BYTE arg, BYTE index, BYTE str_index, BYTE screen_ptr_temp
       6 bytes used
5978: FUNC LineWord
6029: FUNC CheckData
       VARS: BYTE input_mode, BYTE y_buff, BYTE index, BYTE which_digit, BYTE negative, BYTE exp_negative, BYTE exp_count, BYTE exp_found, BYTE dec_found, BYTE nonzero_found, BYTE digit_count, BYTE exp_digit_count, BYTE digit_found, BYTE num_buff, BYTE float_buff
       15 bytes used
6551: FUNC ExecToken
6686: FUNC ExecThread
6713: FUNC StackAddItem
6726: FUNC DictEnd
6776: FUNC IncDictPtr
6789: FUNC IncExecPtr
6802: FUNC AllocMem
6832: FUNC WriteToken
       VARS: BYTE token, BYTE user_defined
       2 bytes used
6891: FUNC WriteHeader
6959: FUNC TokenArgThread
6997: FUNC HexFalse
7005: FUNC HexTrue
7026: include words.asm
9564: include word_stubs.asm
9865: include forth_loop.asm
9873: FUNC ForthLoop
       VARS: WORD dest, BYTE arg, BYTE type
       4 bytes used
10105: include bank1.asm
10138: include bank2.asm
10145: FUNC StackAddItem_bank2
10170: include bank4.asm
10190: FUNC WORD_WORDS_GC
10596: include bank_fixed.asm
10609: FUNC FindWord
       VARS: BYTE address_temp, BYTE bank_temp
       2 bytes used
10696: FUNC WORD_WORDS_Search
11102: FUNC main BEGIN

Call graph
==========
main(0) > setup(0) - (0 bytes)
main(0) > tests(0) - (0 bytes)
main(0) > tests(0) > DebugText(2) - (2 bytes)
main(0) > stats(0) - (0 bytes)
main(0) > stats(0) > DebugText(2) - (2 bytes)
main(0) > GfxSetup(0) - (0 bytes)
main(0) > ForthLoop(4) - (4 bytes)
main(0) > ForthLoop(4) > InitForth(0) - (4 bytes)
main(0) > ForthLoop(4) > DrawStack(4) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_clrscr(1) - (9 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawAlpha(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawAlpha(0) > LCD_Row(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawAlpha(0) > LCD_Col(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawAlpha(0) > LCD_Byte(2) - (10 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawAlpha(0) > LCD_char(7) - (15 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Col(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_char(7) - (15 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) - (11 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > LCD_char(7) - (18 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) - (13 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) > LCD_char(7) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexLow(2) - (13 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexLow(2) > LCD_char(7) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_print(4) - (12 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_print(4) > LCD_char(7) - (19 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Row(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) - (15 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > MemCopy(5) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > LCD_char(7) - (22 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) - (16 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) > LCD_char(7) - (23 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) - (16 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) > LCD_char(7) - (23 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawString(4) - (12 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawString(4) > LCD_char(7) - (19 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Byte(2) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_Col(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_Row(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_print(4) - (14 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_print(4) > LCD_char(7) - (21 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > GetTimer(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > ReadKey(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_char(7) - (17 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > DrawAlpha(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > DrawAlpha(0) > LCD_Row(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > DrawAlpha(0) > LCD_Col(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > DrawAlpha(0) > LCD_Byte(2) - (12 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > DrawAlpha(0) > LCD_char(7) - (17 bytes)
main(0) > ForthLoop(4) > LineWord(0) - (4 bytes)
main(0) > ForthLoop(4) > FindWord(2) - (6 bytes)
main(0) > ForthLoop(4) > WriteToken(2) - (6 bytes)
main(0) > ForthLoop(4) > WriteToken(2) > AllocMem(0) - (6 bytes)
main(0) > ForthLoop(4) > CheckData(15) - (19 bytes)
main(0) > ForthLoop(4) > CheckData(15) > BCD_Reverse(3) - (22 bytes)
main(0) > ForthLoop(4) > MemCopy(5) - (9 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_Col(0) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_Row(0) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_print(4) - (10 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_print(4) > LCD_char(7) - (17 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_char(7) - (13 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > ReadKey(0) - (6 bytes)

Functions outside of call graph
===============================
AddTest(6 bytes)
AuxPopShort(0 bytes)
AuxPushShort(0 bytes)
BCD_Add(0 bytes)
BCD_CORDIC(0 bytes)
BCD_Div(0 bytes)
BCD_Exp_diff(0 bytes)
BCD_Mult(0 bytes)
BCD_Pack(0 bytes)
BCD_RevExp(0 bytes)
BCD_RevSig(0 bytes)
BCD_Round(0 bytes)
BCD_StickyRound(0 bytes)
BCD_Unpack(0 bytes)
CORDIC_AsinAcos(0 bytes)
CORDIC_Atan(0 bytes)
CORDIC_Atrig1(0 bytes)
CORDIC_MarkSign(0 bytes)
CORDIC_Pack(0 bytes)
CORDIC_Push(0 bytes)
CORDIC_ShiftR0(0 bytes)
CORDIC_Trig(0 bytes)
CompareRans(0 bytes)
CopyNew(2 bytes)
CopyRegs(0 bytes)
DebugBuff(0 bytes)
DebugRans(0 bytes)
DictEnd(0 bytes)
DivTest(6 bytes)
ExecThread(0 bytes)
ExecToken(0 bytes)
FileInputTest(1 bytes)
HalfShift(0 bytes)
HalfShiftBackward(0 bytes)
HalfShiftForward(0 bytes)
HalfShiftWide(0 bytes)
HalfShiftWideForward(0 bytes)
HexFalse(0 bytes)
HexTrue(0 bytes)
IncDictPtr(0 bytes)
IncExecPtr(0 bytes)
IncRansExp(0 bytes)
InputTest(7 bytes)
MaxReg(0 bytes)
MultTest(6 bytes)
NewToR(2 bytes)
NormRans(0 bytes)
RansToBuff(0 bytes)
RansTos(0 bytes)
ShiftR0(0 bytes)
ShiftRx(0 bytes)
StackAddItem(0 bytes)
StackAddItem_bank2(0 bytes)
SwapR0R1(0 bytes)
TestFail(2 bytes)
TestsPassed(0 bytes)
TokenArgThread(0 bytes)
TosR0R1(0 bytes)
WORD_WORDS_GC(0 bytes)
WORD_WORDS_Search(0 bytes)
WriteHeader(0 bytes)
ZeroReg(0 bytes)
file_tests(0 bytes)
halt_no_test(0 bytes)
halt_test(2 bytes)
inc_line(0 bytes)
line_num(0 bytes)
read2(0 bytes)
read_file_line(0 bytes)

String literals from CALL
=========================
_string_literal00001: FCB "\\rTest ",0
_string_literal00002: FCB ": FAILED!\\n",0
_string_literal00003: FCB "   Expected: ",0
_string_literal00004: FCB "\\n   Found:    ",0
_string_literal00005: FCB "\\gTest ",0
_string_literal00006: FCB ": passed\\n",0
_string_literal00007: FCB "E",0
_string_literal00008: FCB "E",0
_string_literal00009: FCB "\\rTest ",0
_string_literal00010: FCB ": FAILED!\\n",0
_string_literal00011: FCB "   Expected: ",0
_string_literal00012: FCB "\\n   Found:    ",0
_string_literal00013: FCB "\\n\\n",0
_string_literal00014: FCB "\\gTest ",0
_string_literal00015: FCB ": passed - ",0
_string_literal00016: FCB "\\n",0
_string_literal00017: FCB "\\n\\gAll specific tests passed",0
_string_literal00018: FCB "\\l",0
_string_literal00019: FCB "\\n\\n\\rLine ",0
_string_literal00020: FCB ": FAILED!\\n",0
_string_literal00021: FCB "   Found:    ",0
_string_literal00022: FCB "\\n\\n\\lBeginning file-based tests\\n",0
_string_literal00023: FCB "\\n\\rUnrecognized input code: $",0
_string_literal00024: FCB "\\n\\l",0
_string_literal00025: FCB "\\n\\n\\gAll filed-based tests passed",0
_string_literal00026: FCB "\\n\\n\\rFile-based tests failed: ",0
_string_literal00027: FCB "\\n\\lTotal lines: ",0
_string_literal00028: FCB "\\n\\n\\rLine ",0
_string_literal00029: FCB ": FAILED!\\n",0
_string_literal00030: FCB "   Expected: ",0
_string_literal00031: FCB "\\n   Found:    ",0
_string_literal00032: FCB "E",0
_string_literal00033: FCB "\\n\\n\\lFree zp bytes: ",0
_string_literal00034: FCB "\\n\\lFree RIOT bytes: ",0
_string_literal00035: FCB "\\n",0
_string_literal00036: FCB " FREE]",0
_string_literal00037: FCB "               ",0
_string_literal00038: FCB "           [OK]",0
_string_literal00039: FCB "a                     ",0
_string_literal00040: FCB "                ",0


Banked functions
================

