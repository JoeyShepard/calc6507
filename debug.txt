Line numbers
============
1: Zero page assignments
12: include macros.asm
88: include todo.asm
168: include const.asm
444: include emu.asm
502: include zp.asm
510: GLOBAL BYTE null
518: GLOBAL WORD dummy
520: GLOBAL WORD ret_val
524: GLOBAL BYTE keys_alpha
526: GLOBAL BYTE sys_bank
528: GLOBAL BYTE bank_temp_A
530: GLOBAL BYTE bank_temp_Y
534: GLOBAL WORD ret_address
538: GLOBAL WORD screen_ptr
542: GLOBAL WORD dict_ptr
544: GLOBAL WORD new_dict_ptr
547: GLOBAL WORD dict_save
549: GLOBAL WORD exec_ptr
552: GLOBAL WORD obj_address
556: GLOBAL WORD math_ptr1
558: GLOBAL WORD math_ptr2
584: include globals.asm
600: GLOBAL BYTE font_inverted
604: GLOBAL BYTE stack_count
606: GLOBAL BYTE mode
610: GLOBAL WORD test_count
630: GLOBAL BYTE stack_X
636: GLOBAL BYTE math_lo
638: GLOBAL BYTE math_hi
640: GLOBAL BYTE math_a
642: GLOBAL BYTE math_b
644: GLOBAL BYTE math_c
647: GLOBAL BYTE math_d
650: GLOBAL BYTE math_signs
652: GLOBAL BYTE math_sticky
654: GLOBAL BYTE math_max
657: GLOBAL BYTE math_fill
662: GLOBAL BYTE shift_counter
664: GLOBAL BYTE CORDIC_sign
666: GLOBAL BYTE CORDIC_halve
668: GLOBAL BYTE CORDIC_loop_inner
670: GLOBAL BYTE CORDIC_loop_outer
672: GLOBAL BYTE CORDIC_shift_count
674: GLOBAL BYTE CORDIC_sign_temp
676: GLOBAL BYTE CORDIC_end_sign
678: GLOBAL WORD CORDIC_comparator
688: GLOBAL BYTE aux_stack_ptr
690: GLOBAL BYTE aux_stack_count
692: GLOBAL BYTE aux_word_counter
707: include debug.asm
711: FUNC DebugText
       ARGS: STRING msg
       2 bytes used
726: FUNC halt_test
       ARGS: WORD test
       2 bytes used
743: FUNC halt_no_test
762: include tests.asm
772: FUNC InputTest
       ARGS: STRING input, STRING output, BYTE output_index, BYTE calculated_index, BYTE value
       7 bytes used
927: FUNC NewToR
       ARGS: WORD Rx
       2 bytes used
942: FUNC CopyNew
       ARGS: STRING num1
       2 bytes used
966: FUNC DebugRans
1002: FUNC DebugBuff
1040: FUNC RansToBuff
1053: FUNC CompareRans
1072: FUNC TestFail
       ARGS: STRING ans
       2 bytes used
1134: FUNC TestsPassed
1170: FUNC AddTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1237: FUNC MultTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1304: FUNC DivTest
       ARGS: STRING num1, STRING num2, STRING ans
       6 bytes used
1372: FUNC tests
1437: include file_tests.asm
1443: GLOBAL WORD counter1
1444: GLOBAL WORD counter2
1446: GLOBAL WORD failed1
1447: GLOBAL WORD failed2
1449: FUNC line_num
1472: FUNC inc_line
1491: FUNC read_file_line
1517: FUNC FileInputTest
       VARS: BYTE value
       1 byte used
1628: FUNC read2
1655: FUNC file_tests
1944: include stats.asm
1948: FUNC stats
1988: include font_5x8.asm
2187: include font_custom.asm
2220: include emu6507.asm
2233: FUNC setup
2306: FUNC GfxSetup
2316: FUNC ReadKey
2323: FUNC LCD_clrscr
       VARS: BYTE counter
       1 byte used
2346: FUNC LCD_char
       ARGS: BYTE c_out, WORD pixel_ptr, BYTE pixel_index, BYTE pixel, BYTE lc1, BYTE lc2
       7 bytes used
2466: FUNC LCD_print
       ARGS: STRING source, BYTE index, BYTE arg
       4 bytes used
2492: FUNC LCD_Col
2500: FUNC LCD_Row
2514: FUNC LCD_Byte
       ARGS: BYTE data, BYTE counter
       2 bytes used
2547: FUNC GetTimer
2558: include system.asm
2561: FUNC MemCopy
       ARGS: WORD source, WORD dest, BYTE count
       5 bytes used
2581: include math.asm
2598: FUNC BCD_Reverse
       ARGS: WORD source, BYTE count
       3 bytes used
2620: FUNC BCD_RevExp
2634: FUNC BCD_RevSig
2658: FUNC ZeroReg
2672: FUNC MaxReg
2700: FUNC IncRansExp
2716: FUNC SwapR0R1
2737: FUNC CopyRegs
2756: FUNC TosR0R1
2783: FUNC RansTos
2807: FUNC HalfShift
2829: FUNC HalfShiftForward
2849: FUNC HalfShiftBackward
2869: FUNC HalfShiftWide
2895: FUNC HalfShiftWideForward
2920: FUNC ShiftR0
3010: FUNC ShiftRx
3098: FUNC NormRans
3189: FUNC BCD_Round
3228: FUNC BCD_Unpack
3250: FUNC BCD_Pack
3293: FUNC BCD_Exp_diff
3306: FUNC BCD_StickyRound
3352: FUNC BCD_Add
3531: FUNC BCD_Mult
3673: FUNC BCD_Div
3814: include cordic.asm
3932: FUNC BCD_CORDIC
4219: FUNC CORDIC_ShiftR0
4229: FUNC CORDIC_MarkSign
4247: FUNC CORDIC_Trig
4406: FUNC CORDIC_Atrig1
4419: FUNC CORDIC_Atan
4581: FUNC CORDIC_AsinAcos
4738: FUNC CORDIC_Pack
4791: FUNC CORDIC_Push
4910: include output.asm
4914: FUNC DigitHigh
       ARGS: BYTE digit
       1 byte used
4935: FUNC DigitLow
       ARGS: BYTE digit
       1 byte used
4953: FUNC DrawFloat
       ARGS: WORD source, BYTE index, BYTE arg, BYTE sign, WORD buff
       7 bytes used
5076: FUNC HexHigh
       ARGS: BYTE digit, BYTE arg
       2 bytes used
5106: FUNC HexLow
       ARGS: BYTE digit, BYTE arg
       2 bytes used
5133: FUNC DrawHex
       ARGS: WORD source, BYTE arg
       3 bytes used
5174: FUNC DrawString
       ARGS: WORD source, BYTE arg, BYTE index
       4 bytes used
5212: FUNC DrawStack
       VARS: BYTE character, BYTE counter, WORD address
       4 bytes used
5389: include error.asm
5443: FUNC ErrorMsg
       VARS: WORD msg
       2 bytes used
5522: include aux_stack.asm
5527: FUNC AuxPushShort
5552: FUNC AuxPopShort
5576: include forth.asm
5579: FUNC InitForth
5606: FUNC ReadLine
       VARS: BYTE cursor, BYTE cursor_timer, BYTE arg, BYTE index, BYTE str_index, BYTE screen_ptr_temp
       6 bytes used
5882: FUNC LineWord
5939: FUNC FindWord
       VARS: BYTE address_temp
       1 byte used
6008: FUNC CheckData
       VARS: BYTE input_mode, BYTE y_buff, BYTE index, BYTE which_digit, BYTE negative, BYTE exp_negative, BYTE exp_count, BYTE exp_found, BYTE dec_found, BYTE nonzero_found, BYTE digit_count, BYTE exp_digit_count, BYTE digit_found, BYTE num_buff, BYTE float_buff
       15 bytes used
6530: FUNC ExecToken
6665: FUNC ExecThread
6692: FUNC StackAddItem
6705: FUNC DictEnd
6755: FUNC IncDictPtr
6768: FUNC IncExecPtr
6781: FUNC AllocMem
6811: FUNC WriteToken
       VARS: BYTE token, BYTE user_defined
       2 bytes used
6870: FUNC WriteHeader
6938: FUNC TokenArgThread
6976: FUNC HexFalse
6984: FUNC HexTrue
7004: include words.asm
10326: include word_stubs.asm
10632: include forth_loop.asm
10638: FUNC ForthLoop
       VARS: WORD dest, BYTE arg, BYTE type
       4 bytes used
10868: FUNC main BEGIN

Call graph
==========
main(0) > setup(0) - (0 bytes)
main(0) > tests(0) - (0 bytes)
main(0) > tests(0) > DebugText(2) - (2 bytes)
main(0) > stats(0) - (0 bytes)
main(0) > stats(0) > DebugText(2) - (2 bytes)
main(0) > GfxSetup(0) - (0 bytes)
main(0) > ForthLoop(4) - (4 bytes)
main(0) > ForthLoop(4) > InitForth(0) - (4 bytes)
main(0) > ForthLoop(4) > DrawStack(4) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_clrscr(1) - (9 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Col(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Byte(2) - (10 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_char(7) - (15 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) - (11 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > LCD_char(7) - (18 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) - (13 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexHigh(2) > LCD_char(7) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexLow(2) - (13 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawHex(3) > HexLow(2) > LCD_char(7) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_print(4) - (12 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_print(4) > LCD_char(7) - (19 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > LCD_Row(0) - (8 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) - (15 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > MemCopy(5) - (20 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > LCD_char(7) - (22 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) - (16 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitHigh(1) > LCD_char(7) - (23 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) - (16 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawFloat(7) > DigitLow(1) > LCD_char(7) - (23 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawString(4) - (12 bytes)
main(0) > ForthLoop(4) > DrawStack(4) > DrawString(4) > LCD_char(7) - (19 bytes)
main(0) > ForthLoop(4) > ReadLine(6) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_Col(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_Row(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_print(4) - (14 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_print(4) > LCD_char(7) - (21 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > GetTimer(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > ReadKey(0) - (10 bytes)
main(0) > ForthLoop(4) > ReadLine(6) > LCD_char(7) - (17 bytes)
main(0) > ForthLoop(4) > LineWord(0) - (4 bytes)
main(0) > ForthLoop(4) > FindWord(1) - (5 bytes)
main(0) > ForthLoop(4) > WriteToken(2) - (6 bytes)
main(0) > ForthLoop(4) > WriteToken(2) > AllocMem(0) - (6 bytes)
main(0) > ForthLoop(4) > CheckData(15) - (19 bytes)
main(0) > ForthLoop(4) > CheckData(15) > BCD_Reverse(3) - (22 bytes)
main(0) > ForthLoop(4) > MemCopy(5) - (9 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_Col(0) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_Row(0) - (6 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_print(4) - (10 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_print(4) > LCD_char(7) - (17 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > LCD_char(7) - (13 bytes)
main(0) > ForthLoop(4) > ErrorMsg(2) > ReadKey(0) - (6 bytes)

Functions outside of call graph
===============================
AddTest(6 bytes)
AuxPopShort(0 bytes)
AuxPushShort(0 bytes)
BCD_Add(0 bytes)
BCD_CORDIC(0 bytes)
BCD_Div(0 bytes)
BCD_Exp_diff(0 bytes)
BCD_Mult(0 bytes)
BCD_Pack(0 bytes)
BCD_RevExp(0 bytes)
BCD_RevSig(0 bytes)
BCD_Round(0 bytes)
BCD_StickyRound(0 bytes)
BCD_Unpack(0 bytes)
CORDIC_AsinAcos(0 bytes)
CORDIC_Atan(0 bytes)
CORDIC_Atrig1(0 bytes)
CORDIC_MarkSign(0 bytes)
CORDIC_Pack(0 bytes)
CORDIC_Push(0 bytes)
CORDIC_ShiftR0(0 bytes)
CORDIC_Trig(0 bytes)
CompareRans(0 bytes)
CopyNew(2 bytes)
CopyRegs(0 bytes)
DebugBuff(0 bytes)
DebugRans(0 bytes)
DictEnd(0 bytes)
DivTest(6 bytes)
ExecThread(0 bytes)
ExecToken(0 bytes)
FileInputTest(1 bytes)
HalfShift(0 bytes)
HalfShiftBackward(0 bytes)
HalfShiftForward(0 bytes)
HalfShiftWide(0 bytes)
HalfShiftWideForward(0 bytes)
HexFalse(0 bytes)
HexTrue(0 bytes)
IncDictPtr(0 bytes)
IncExecPtr(0 bytes)
IncRansExp(0 bytes)
InputTest(7 bytes)
MaxReg(0 bytes)
MultTest(6 bytes)
NewToR(2 bytes)
NormRans(0 bytes)
RansToBuff(0 bytes)
RansTos(0 bytes)
ShiftR0(0 bytes)
ShiftRx(0 bytes)
StackAddItem(0 bytes)
SwapR0R1(0 bytes)
TestFail(2 bytes)
TestsPassed(0 bytes)
TokenArgThread(0 bytes)
TosR0R1(0 bytes)
WriteHeader(0 bytes)
ZeroReg(0 bytes)
file_tests(0 bytes)
halt_no_test(0 bytes)
halt_test(2 bytes)
inc_line(0 bytes)
line_num(0 bytes)
read2(0 bytes)
read_file_line(0 bytes)

String literals from CALL
=========================
_string_literal00001: FCB "\\rTest ",0
_string_literal00002: FCB ": FAILED!\\n",0
_string_literal00003: FCB "   Expected: ",0
_string_literal00004: FCB "\\n   Found:    ",0
_string_literal00005: FCB "\\gTest ",0
_string_literal00006: FCB ": passed\\n",0
_string_literal00007: FCB "E",0
_string_literal00008: FCB "E",0
_string_literal00009: FCB "\\rTest ",0
_string_literal00010: FCB ": FAILED!\\n",0
_string_literal00011: FCB "   Expected: ",0
_string_literal00012: FCB "\\n   Found:    ",0
_string_literal00013: FCB "\\n\\n",0
_string_literal00014: FCB "\\gTest ",0
_string_literal00015: FCB ": passed - ",0
_string_literal00016: FCB "\\n",0
_string_literal00017: FCB "\\n\\gAll specific tests passed",0
_string_literal00018: FCB "\\l",0
_string_literal00019: FCB "\\n\\n\\rLine ",0
_string_literal00020: FCB ": FAILED!\\n",0
_string_literal00021: FCB "   Found:    ",0
_string_literal00022: FCB "\\n\\n\\lBeginning file-based tests\\n",0
_string_literal00023: FCB "\\n\\rUnrecognized input code: $",0
_string_literal00024: FCB "\\n\\l",0
_string_literal00025: FCB "\\n\\n\\gAll filed-based tests passed",0
_string_literal00026: FCB "\\n\\n\\rFile-based tests failed: ",0
_string_literal00027: FCB "\\n\\lTotal lines: ",0
_string_literal00028: FCB "\\n\\n\\rLine ",0
_string_literal00029: FCB ": FAILED!\\n",0
_string_literal00030: FCB "   Expected: ",0
_string_literal00031: FCB "\\n   Found:    ",0
_string_literal00032: FCB "E",0
_string_literal00033: FCB "\\n\\n\\lFree zp bytes: ",0
_string_literal00034: FCB "\\n\\lFree RIOT bytes: ",0
_string_literal00035: FCB "\\n",0
_string_literal00036: FCB " FREE]",0
_string_literal00037: FCB "               ",0
_string_literal00038: FCB "           [OK]",0
_string_literal00039: FCB "a                     ",0
_string_literal00040: FCB "                ",0


Banked functions
================

